package libreturncode

var success = Success{
	Api:          payload{Code: 200200, Message: "api success"},
	Jwt:          payload{Code: 200220, Message: "jwt success"},
	RedisSet:     payload{Code: 200240, Message: "redis insert success"},
	RedisUpdate:  payload{Code: 200241, Message: "redis update success"},
	RedisGet:     payload{Code: 200242, Message: "redis get success"},
	RedisDelete:  payload{Code: 200243, Message: "redis delete success"},
	RedisLPush:   payload{Code: 200244, Message: "redis left pushing to list success"},
	RedisRPush:   payload{Code: 200245, Message: "redis right pushing to list success"},
	RedisLPop:    payload{Code: 200246, Message: "redis left popping from list success"},
	RedisRPop:    payload{Code: 200247, Message: "redis right popping from list success"},
	RedisZapp:    payload{Code: 200248, Message: "redis adding elements to the sorted set success"},
	RedisZRange:  payload{Code: 200249, Message: "redis getting elements from the sorted set success"},
	RedisHSet:    payload{Code: 200250, Message: "redis setting values in hash success"},
	RedisHGet:    payload{Code: 200251, Message: "redis getting value from hash success"},
	RedisHGetAll: payload{Code: 200252, Message: "redis getting all value from hash success"},
	DBInser:      payload{Code: 200260, Message: "db insert success"},
	DBUpdate:     payload{Code: 200261, Message: "db update success"},
	DBSelect:     payload{Code: 200262, Message: "db select success"},
	DBDelete:     payload{Code: 200263, Message: "db delete success"},
	DataParse:    payload{Code: 200280, Message: "data parsing success"},
	Publish:      payload{Code: 200401, Message: "success to publish"},
	SubReceive:   payload{Code: 200402, Message: "sub success to receive messages"},
	SocialLogin:  payload{Code: 200300, Message: "user social login success"},
	SocialLogout: payload{Code: 200301, Message: "user logout success"},
	OTPLogin:     payload{Code: 200600, Message: "user phone number login success"},
	OTPLogout:    payload{Code: 200601, Message: "send phone number to Twilio success"},
	OTPVerify:    payload{Code: 200602, Message: "verify otp message success"},
	Other:        payload{Code: 200999, Message: "other"},
}

var serviceFail = ServiceFail{
	ApiReq:        payload{Code: 400200, Message: "api req type error"},
	ApiRes:        payload{Code: 400201, Message: "api res type error"},
	ApiHeader:     payload{Code: 400202, Message: "api header type error"},
	ApiReqCreate:  payload{Code: 400203, Message: "create api request fail"},
	ApiReqDo:      payload{Code: 400204, Message: "do api request fail"},
	ApiResRead:    payload{Code: 400205, Message: "read api response fail"},
	JwtInput:      payload{Code: 400220, Message: "jwt input type error"},
	JwtOutput:     payload{Code: 400221, Message: "jwt ouput type error"},
	RedisKey:      payload{Code: 400240, Message: "redis key not find"},
	RedisInput:    payload{Code: 400241, Message: "redis input type error"},
	RedisOutput:   payload{Code: 400242, Message: "redis output type error"},
	RedisGet:      payload{Code: 400243, Message: "redis get fail"},
	RedisSet:      payload{Code: 400244, Message: "redis set fail"},
	RedisLPush:    payload{Code: 400245, Message: "redis left pushing to list fail"},
	RedisRPush:    payload{Code: 400246, Message: "redis right pushing to list fail"},
	RedisLPop:     payload{Code: 400247, Message: "redis left popping from list fail"},
	RedisRPop:     payload{Code: 400248, Message: "redis right popping from list fail"},
	RedisZapp:     payload{Code: 400249, Message: "redis adding elements to the sorted set fail"},
	RedisZRange:   payload{Code: 400250, Message: "redis getting elements from the sorted set fail"},
	RedisHSet:     payload{Code: 400251, Message: "redis setting values in hash fail"},
	RedisHGet:     payload{Code: 400252, Message: "redis getting value from hash fail"},
	RedisHGetAll:  payload{Code: 400253, Message: "redis getting all value from hash fail"},
	DBTable:       payload{Code: 400260, Message: "db table not find"},
	DBData:        payload{Code: 400261, Message: "db data not find"},
	DBInser:       payload{Code: 400262, Message: "db inser fail"},
	DBUpdate:      payload{Code: 400263, Message: "db update fail"},
	DBInput:       payload{Code: 400264, Message: "db input type error"},
	DBOutput:      payload{Code: 400265, Message: "db output type error"},
	DataParse:     payload{Code: 400280, Message: "data parsing fail"},
	DataUndefined: payload{Code: 400281, Message: "data undefined"},
	DataToJson:    payload{Code: 400282, Message: "data to json fail"},
	Publish:       payload{Code: 400401, Message: "failed to publish"},
	SubReceive:    payload{Code: 400402, Message: "sub failed to receive messages"},
	SocialReq:     payload{Code: 400300, Message: "parse request body error"},
	SocialSet:     payload{Code: 400301, Message: "set request error to OneAll service error"},
	SocialApi:     payload{Code: 400302, Message: "send request error to OneAll service error"},
	SocialRes:     payload{Code: 400303, Message: "read response from OneAll service error"},
	Other:         payload{Code: 400999, Message: "other"},
}

var connectFail = ConnectFail{
	Api:   payload{Code: 500200, Message: "api connect fail"},
	Jwt:   payload{Code: 500220, Message: "jwt connect fail"},
	Redis: payload{Code: 500240, Message: "redis connect fail"},
	DB:    payload{Code: 500260, Message: "db connect fail"},
	Other: payload{Code: 500999, Message: "other"},
}

var gameFail = GameFail{
	GameNo:            payload{Code: 600100, Message: "game undefined"},
	SysCreateAccount:  payload{Code: 600200, Message: "system create account fail"},
	GameCreateAccount: payload{Code: 600201, Message: "game create account fail"},
	GameAccountExist:  payload{Code: 600202, Message: "game account exist"},
	Other:             payload{Code: 600999, Message: "other"},
}

var Cobelib = ReturnCode{
	Success:     success,
	ServiceFail: serviceFail,
	ConnectFail: connectFail,
	GameFail:    gameFail,
}
